individualParts_LostSales_NoZeros = individualParts_LostSales %>%
filter(lost_sales > 0)
ggplot(individualParts_LostSales_NoZeros, aes(lost_sales)) +
geom_density() +
ggtitle("Density of Potential Lost Sales")
head(topLossNames)
topLossNames = individualParts_LostSales %>%
select(partdescription_clean, lost_sales)
head(topLossNames)
head(topLossNames) %>%
select(partdescription_clean)
head(topLossNames)
topLoss = pm %>%
group_by(date, partnumber, partdescription_clean) %>%
summarize(lost_sales = sum(potential_lost_sales))
topLoss
topLoss = pm %>%
group_by(date, partnumber, partdescription_clean) %>%
summarize(lost_sales = sum(potential_lost_sales)) %>%
arrange(desc(lost_sales))
topLoss
topLoss = pm %>%
group_by(date, partnumber, partdescription_clean) %>%
summarize(lost_sales = sum(potential_lost_sales)) %>%
filter(partnumber %in% topLossNames$partnumber[1:5]) %>%
arrange(desc(lost_sales))
topLoss
ggplot(topLoss, aes(date, lost_sales, color=partnumber)) +
geom_line()
ggplot(topLoss, aes(date, lost_sales, color=partdescription_clean)) +
geom_line()
ggplot(topLoss, aes(date, lost_sales, color=partdescription_clean)) +
geom_smooth()
ggplot(topLoss, aes(date, lost_sales, color=partdescription_clean)) +
geom_smooth(se=FALSE)
ggplot(topLoss, aes(date, sum(lost_sales), color=partdescription_clean)) +
geom_smooth(se=FALSE)
ggplot(topLoss, aes(date, lost_sales, color=partdescription_clean)) +
geom_smooth(se=FALSE)
ggplot(topLoss, aes(date, lost_sales, linetype=partdescription_clean)) +
geom_smooth(se=FALSE)
ggplot(topLoss, aes(date, lost_sales, linetype=partdescription_clean)) +
geom_smooth(se=FALSE, color='black')
ggplot(topLoss, aes(date, lost_sales, linetype=partdescription_clean, color=partdescription_clean)) +
geom_smooth(se=FALSE, color='black')
ggplot(topLoss, aes(date, lost_sales, linetype=partdescription_clean, color=partdescription_clean)) +
geom_smooth(se=FALSE)
topLoss
ggplot(topLoss, aes(date, lost_sales, linetype=partdescription_clean, color=partdescription_clean)) +
geom_line()
ggplot(topLoss, aes(date, lost_sales, color=partdescription_clean)) +
geom_line()
ggplot(topLoss, aes(date, lost_sales, linetype=partdescription_clean, color=partdescription_clean)) +
geom_smooth(se=FALSE)
ggplot(topLoss, aes(date, lost_sales, linetype=partdescription_clean, color=partdescription_clean)) +
geom_smooth(se=FALSE) +
ggtitle('Local Regression of Lost Sales')
individualParts
ggplot(oil, aes(date, lost_sales)) +
geom_line(linetype=1) +
geom_point(aes(color=salespointnumber)) +
ggtitle("Maximum Recorded Lost Sales of Oil Filters Over Time by Salespoint")
ggplot(sumsales, aes(date, lost_sales)) +
geom_line() +
geom_line(aes(y=6*opportunity_units), color="red") +
geom_rect(aes(xmin=as.Date("2016-07-01"), xmax=as.Date("2017-09-01"), ymin=1e+07, ymax=3.5e+07), alpha = 0.005) +
ggtitle("Lost Sales vs Opportunity Units") +
annotate("text", x=as.Date("2014-03-01"), y=2.9e+07, label="lost sales") +
annotate("text", x=as.Date("2013-12-01"), y=1.6e07, label="opportunity units \n (scaled)", color="red")
ggplot(sumsales, aes(date, lost_sales)) +
geom_line() +
geom_line(aes(y=6*opportunity_units), color="red") +
geom_rect(aes(xmin=as.Date("2016-07-01"), xmax=as.Date("2017-09-01"), ymin=1e+07, ymax=3.5e+07), alpha = 0.005) +
ggtitle("Lost Sales vs Opportunity Units") +
annotate("text", x=as.Date("2014-04-01"), y=2.9e+07, label="lost sales") +
annotate("text", x=as.Date("2013-11-01"), y=1.6e07, label="opportunity units \n (scaled)", color="red")
ggplot(i0107, aes(date, lost_sales)) +
geom_point(color="red") +
geom_line() +
ggtitle("Lost Oil Filter Sales at Salespoint I0107")
ggplot(i0107, aes(date, lost_sales)) +
geom_line() +
geom_point(color=15) +
ggtitle("Lost Oil Filter Sales at Salespoint I0107")
ggplot(i0107, aes(date, lost_sales)) +
geom_line() +
geom_point(color="#F8766D") +
ggtitle("Lost Oil Filter Sales at Salespoint I0107")
top50 = read_csv("TOP_50_SHIPVALUE.csv")
ggplot(top50, aes(date, avg)) +
geom_vline(xintercept=as.Date('2016-09-01'), color='red', linetype=2) +
geom_line() +
annotate('text', x=as.Date("2016-03-01"), y=1650, label='September 2016', color='red') +
ggtitle("Average Shipment Values of High Opportunity Unit Parts")
ggplot(avgprice, aes(date, avg)) +
geom_line() +
geom_smooth(color="red", span=1)
ggplot(top50, aes(date, avg)) +
geom_vline(xintercept=as.Date('2016-09-01'), color='red', linetype=2) +
geom_line() +
annotate('text', x=as.Date("2016-2-01"), y=1650, label='September 2016', color='red') +
ggtitle("Average Shipment Values of High Opportunity Unit Parts")
ggplot(top50, aes(date, avg)) +
geom_vline(xintercept=as.Date('2016-09-01'), color='red', linetype=2) +
geom_line() +
annotate('text', x=as.Date("2016-2-01"), y=1650, label='September 2016', color='red') +
ggtitle("Average Shipment Values of High Opportunity Unit Parts") +
geom_line(avgprice, color="#00BFC4")
ggplot(top50, aes(date, avg)) +
geom_vline(xintercept=as.Date('2016-09-01'), color='red', linetype=2) +
geom_line() +
annotate('text', x=as.Date("2016-2-01"), y=1650, label='September 2016', color='red') +
ggtitle("Average Shipment Values of High Opportunity Unit Parts") +
geom_line(aes(avgprice, color="#00BFC4"))
ggplot(top50, aes(date, avg)) +
geom_vline(xintercept=as.Date('2016-09-01'), color='red', linetype=2) +
geom_line() +
annotate('text', x=as.Date("2016-2-01"), y=1650, label='September 2016', color='red') +
ggtitle("Average Shipment Values of High Opportunity Unit Parts")
ggplot(avg_lost_sales, aes(date, lost_sales)) +
geom_line() +
ggtitle("Average Lost Sales Over Time")
ggplot(avg_lost_sales, aes(date, lost_sales)) +
geom_line() +
ggtitle("Average Lost Sales for Single Transaction")
?geom_smooth
ggplot(topLoss, aes(date, lost_sales, linetype=partdescription_clean, color=partdescription_clean)) +
geom_smooth(se=FALSE, span=0.8) +
ggtitle('Local Regression of Lost Sales: Top 5 Parts')
ggplot(topLoss, aes(date, lost_sales, linetype=partdescription_clean, color=partdescription_clean)) +
geom_smooth(se=FALSE, span=0.1) +
ggtitle('Local Regression of Lost Sales: Top 5 Parts')
ggplot(topLoss, aes(date, lost_sales, linetype=partdescription_clean, color=partdescription_clean)) +
geom_smooth(se=FALSE, span=1) +
ggtitle('Local Regression of Lost Sales: Top 5 Parts')
ggplot(topLoss, aes(date, lost_sales, linetype=partdescription_clean, color=partdescription_clean)) +
geom_line() +
ggtitle('Local Regression of Lost Sales: Top 5 Parts')
ggplot(topLoss, aes(date, lost_sales, color=partdescription_clean)) +
geom_line() +
ggtitle('Local Regression of Lost Sales: Top 5 Parts')
ggplot(topLoss, aes(date, lost_sales, linetype=partdescription_clean, color=partdescription_clean)) +
geom_smooth(se=FALSE, span=1) +
ggtitle('Local Regression of Lost Sales: Top 5 Parts')
ggplot(topLoss, aes(date, lost_sales, color=partdescription_clean)) +
geom_line() +
ggtitle('Local Regression of Lost Sales: Top 5 Parts')
ggplot(topLoss, aes(date, lost_sales, linetype=partdescription_clean, color=partdescription_clean)) +
geom_smooth(se=FALSE, span=1) +
ggtitle('Local Regression of Lost Sales: Top 5 Parts')
ggplot(topLoss, aes(date, lost_sales, linetype=partdescription_clean, color=partdescription_clean)) +
geom_smooth(se=FALSE, span=0.7) +
ggtitle('Local Regression of Lost Sales: Top 5 Parts')
ggplot(topLoss, aes(date, lost_sales, linetype=3 color=partdescription_clean)) +
ggplot(topLoss, aes(date, lost_sales, linetype=3, color=partdescription_clean)) +
geom_smooth(se=FALSE, span=0.7) +
ggtitle('Local Regression of Lost Sales: Top 5 Parts')
ggplot(topLoss, aes(date, lost_sales, color=partdescription_clean)) +
geom_smooth(se=FALSE, span=0.7, linetype=3) +
ggtitle('Local Regression of Lost Sales: Top 5 Parts')
ggplot(topLoss, aes(date, lost_sales, linetype=3, color=partdescription_clean)) +
geom_smooth(se=FALSE, span=0.7) +
ggtitle('Local Regression of Lost Sales: Top 5 Parts')
ggplot(topLoss, aes(date, lost_sales, linetype=partdescription_clean, color=partdescription_clean)) +
geom_smooth(se=FALSE, span=0.7) +
ggtitle('Local Regression of Lost Sales: Top 5 Parts')
ggplot(avg_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(sum_lost_sales)
avg_lost_sales = read_csv("AVG_LOST_SALES.csv")
sum_lost_sales = read_csv("SUM_LOST_SALES.csv")
ggplot(avg_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(sum_lost_sales)
geom_line(aes(date, sum_lost_sales)+ +
geom_line(aes(date, sum_lost_sales) +
ggplot(avg_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(aes(date, sum_lost_sales)) +
ggtitle("Average Lost Sales for Single Transaction")
_
ggplot(avg_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(aes(date, sum_lost_sales)) +
ggtitle("Average Lost Sales for Single Transaction")
sum_lost_sales
avg_lost_sales
date
ggplot(avg_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=sum_lost_sales, aes(date, lost_sales)) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 8*lost_sales)) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 80*lost_sales)) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, lost_sales)) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 100*lost_sales)) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 2*lost_sales)) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 3*lost_sales)) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 2.5*lost_sales)) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 2.5*lost_sales), linetype=2) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 2*lost_sales), linetype=2) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 1.5**lost_sales), linetype=2) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 1.5*avg_lost_sales$lost_sales), linetype=2) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 80*avg_lost_sales$lost_sales), linetype=2) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 800*avg_lost_sales$lost_sales), linetype=2) +
ggtitle("Average Lost Sales for Single Transaction")
avg_lost_sales
sum_lost_sales
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 80000*avg_lost_sales$lost_sales), linetype=2) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 800000*avg_lost_sales$lost_sales), linetype=2) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 200000*avg_lost_sales$lost_sales), linetype=2) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 300000*avg_lost_sales$lost_sales), linetype=2) +
ggtitle("Average Lost Sales for Single Transaction")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 300000*avg_lost_sales$lost_sales), linetype=2) +
ggtitle("Average Lost Sales for Single Transaction") +
annotate("text", x=as.Date("2014-04-01"), y=2.9e+07, label="Sum of Lost Sales") +
annotate("text", x=as.Date("2013-11-01"), y=1.6e07, label="Mean of Lost Sales \n (scaled)")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 300000*avg_lost_sales$lost_sales), linetype=2) +
ggtitle("Average Lost Sales for Single Transaction") +
annotate("text", x=as.Date("2014-06-01"), y=2.9e+07, label="Sum of Lost Sales") +
annotate("text", x=as.Date("2013-11-01"), y=1.6e07, label="Mean of Lost Sales \n (scaled)")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 300000*avg_lost_sales$lost_sales), linetype=2) +
ggtitle("Average Lost Sales for Single Transaction") +
annotate("text", x=as.Date("2014-06-01"), y=2.9e+07, label="Sum of Lost Sales") +
annotate("text", x=as.Date("2013-09-01"), y=1.6e07, label="Mean of Lost Sales \n (scaled)")
ggplot(oil, aes(date, lost_sales)) +
geom_line(linetype=1) +
geom_point(aes(color=salespointnumber)) +
ggtitle("Maximum Recorded Lost Sales of Oil Filters by Salespoint")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
setwd("~/Documents/PartsLoyalty/")
require(tidyverse)
pm = read_csv("PARTS_MASTER_SAMPLE.csv", col_names = TRUE)
head(pm)
str(pm)
ggplot(pm, aes(opportunity_units)) +
geom_density() +
ggtitle("Density of Opportunity Units")
head(pm)
pm = read_csv("PARTS_MASTER_SAMPLE.csv", col_names = TRUE)
pm
pm = read_csv("PARTS_MASTER_SAMPLE.csv", col_names = TRUE)
pm = read_csv("PARTS_MASTER_SAMPLE.csv", col_names = TRUE)
head(pm)
str(pm)
ggplot(pm, aes(opportunity_units)) +
geom_density() +
ggtitle("Density of Opportunity Units")
individualParts = pm %>%
select(partnumber, date, opportunity_units, partdescription_clean) %>%
group_by(partnumber, partdescription_clean) %>%
summarize(opportunity_units = sum(opportunity_units)) %>%
arrange(desc(opportunity_units))
head(individualParts)
topPartNames = individualParts %>%
select(partdescription_clean, opportunity_units)
head(individualParts)
topPartNames = individualParts %>%
select(partdescription_clean, opportunity_units)
head(topPartNames)
wd = pm %>%
filter(partnumber == "11026JA00A")
wd = pm %>%
filter(partnumber == "11026JA00A")
ggplot(wd, aes(date, opportunity_units)) +
geom_jitter(alpha=0.4) +
ggtitle("Washer Drain Opportunity Units over Time")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 300000*avg_lost_sales$lost_sales), linetype=2) +
ggtitle("Average Lost Sales for Single Transaction") +
annotate("text", x=as.Date("2014-06-01"), y=2.9e+07, label="Sum of Lost Sales") +
annotate("text", x=as.Date("2013-09-01"), y=1.6e07, label="Mean of Lost Sales \n (scaled)")
avg_lost_sales = read_csv("AVG_LOST_SALES.csv")
sum_lost_sales = read_csv("SUM_LOST_SALES.csv")
ggplot(sum_lost_sales, aes(date, lost_sales)) +
geom_line() +
geom_line(date=avg_lost_sales, aes(date, 300000*avg_lost_sales$lost_sales), linetype=2) +
ggtitle("Average Lost Sales for Single Transaction") +
annotate("text", x=as.Date("2014-06-01"), y=2.9e+07, label="Sum of Lost Sales") +
annotate("text", x=as.Date("2013-09-01"), y=1.6e07, label="Mean of Lost Sales \n (scaled)")
oil = read_csv("OIL_FILTERS_MAX_LOST_SALES_BY_DATE.csv")
ggplot(oil, aes(date, lost_sales)) +
geom_line(linetype=1) +
geom_point(aes(color=salespointnumber)) +
ggtitle("Maximum Recorded Lost Sales of Oil Filters by Salespoint")
i0107 = read_csv("I0107_OIL_FILTERS.csv")
ggplot(i0107, aes(date, lost_sales)) +
geom_line() +
geom_point(color="#F8766D") +
ggtitle("Lost Oil Filter Sales at Salespoint I0107")
sumsales = read_csv("SUM_LOST_SALES_BY_DATE.csv")
ggplot(sumsales, aes(date, lost_sales)) +
geom_line() +
geom_line(aes(y=6*opportunity_units), color="red") +
geom_rect(aes(xmin=as.Date("2016-07-01"), xmax=as.Date("2017-09-01"), ymin=1e+07, ymax=3.5e+07), alpha = 0.005) +
ggtitle("Lost Sales vs Opportunity Units") +
annotate("text", x=as.Date("2014-04-01"), y=2.9e+07, label="lost sales") +
annotate("text", x=as.Date("2013-11-01"), y=1.6e07, label="opportunity units \n (scaled)", color="red")
top50 = read_csv("TOP_50_SHIPVALUE.csv")
ggplot(top50, aes(date, avg)) +
geom_vline(xintercept=as.Date('2016-09-01'), color='red', linetype=2) +
geom_line() +
annotate('text', x=as.Date("2016-2-01"), y=1650, label='September 2016', color='red') +
ggtitle("Average Shipment Values of High Opportunity Unit Parts")
individualParts
individualParts_LostSales
individualParts_LostSales = pm %>%
select(partnumber, date, opportunity_units, potential_lost_sales, partdescription_clean) %>%
group_by(partnumber, partdescription_clean) %>%
summarize(lost_sales = sum(potential_lost_sales)) %>%
arrange(desc(lost_sales))
individualParts_LostSales
head(group)
group = read_csv("AVG_LOST_SALES_BY_PART_GROUP.csv")
head(group)
bulkoil = read_csv("AVG_LOST_SALES_BULK_OIL.csv")
ggplot(bulkoil, aes(date, lost_sales)) +
geom_line()
head(group)
styling = read_csv("AVG_LOST_SALES_STYLING.csv")
ggplot(styling, aes(date, lost_sales)) +
geom_line()
head(group)
electronics = read_csv("AVG_LOST_SALES_ELECTRONICS.csv")
ggplot(electronics, aes(date, lost_sales)) +
geom_line()
ggplot(bulkoil, aes(date, lost_sales)) +
geom_line()
ggplot(styling, aes(date, lost_sales)) +
geom_line()
ggplot(electronics, aes(date, lost_sales)) +
geom_line()
head(group)
packoil = read_csv("AVG_LOST_SALES_PACKAGED_OIL.csv")
ggplot(packoil, aes(date, lost_sales)) +
geom_line()
ggplot(bulkoil, aes(date, lost_sales)) +
geom_line()
styling = read_csv("AVG_LOST_SALES_STYLING.csv")
ggplot(styling, aes(date, lost_sales)) +
geom_line()
ggplot(electronics, aes(date, lost_sales)) +
geom_line()
ggplot(electronics, aes(date, lost_sales)) +
geom_line()
head(group)
ggplot(top, aes(date, lost_sales, color=psat_level_2)) +
geom_line()
top = read_csv("TOP_PART_GROUPS_SALES_AND_LOST_SALES.csv")
ggplot(top, aes(date, lost_sales, color=psat_level_2)) +
geom_line()
ggplot(top, aes(x=date, color=psat_level_2)) +
geom_line(aes(y=lost_sales)) +
geom_line(aes(y=sales, linetype=2))
top = read_csv("TOP_PART_GROUPS_SALES_AND_LOST_SALES.csv")
ggplot(top, aes(x=date, color=psat_level_2)) +
geom_line(aes(y=lost_sales)) +
geom_line(aes(y=sales, linetype=2))
ggplot(top, aes(x=date, color=psat_level_2)) +
geom_line(aes(y=lost_sales)) +
geom_line(aes(y=sales, linetype=psat_level_2))
ggplot(top, aes(x=date, color=psat_level_2)) +
geom_line(aes(y=lost_sales)) +
geom_line(aes(y=sales, linetype=2))
ggplot(top, aes(x=date, color=psat_level_2)) +
geom_line(aes(y=lost_sales)) +
geom_line(aes(y=sales, linetype=3))
ggplot(top, aes(x=date, color=psat_level_2)) +
geom_line(aes(y=lost_sales)) +
geom_line(aes(y=sales), linetype=2)
ggplot(bulkoil, aes(date, lost_sales)) +
geom_line()
ggplot(top, aes(x=date, color=psat_level_2)) +
geom_line(aes(y=lost_sales)) +
geom_line(aes(y=sales), linetype=2)
View(wd)
dealer_loss = read_csv("TOTAL_LOST_SALES_BY_DEALER.csv")
ggplot(dealer_loss, aes(sum)) +
geom_histogram()
dealer_loss = read_csv("TOTAL_LOST_SALES_BY_DEALER.csv")
ggplot(dealer_loss, aes(sum)) +
geom_histogram()
dealer_loss
knitr::opts_chunk$set(echo = TRUE)
ggplot(faithfuld, aes(eruptions, waiting)) +
geom_contour(aes(z=density, color=..level..))
require(ggplot2)
require(dplyr)
require(nlme)
ggplot(faithfuld, aes(eruptions, waiting)) +
geom_contour(aes(z=density, color=..level..))
ggplot(faithfuld, aes(eruptions, waiting)) +
geom_raster(aes(fill=density))
ggplot(faithfuld, aes(eruptions, waiting)) +
geom_point(aes(size = density), alpha = 1/3) +
scale_size_area()
ggplot(faithfuld[1:200,], aes(eruptions, waiting)) +
geom_point(aes(size = density), alpha = 1/3) +
scale_size_area()
ggplot(faithfuld[1:2000,], aes(eruptions, waiting)) +
geom_point(aes(size = density), alpha = 1/3) +
scale_size_area()
ggplot(faithfuld[1:20000,], aes(eruptions, waiting)) +
geom_point(aes(size = density), alpha = 1/3) +
scale_size_area()
ggplot(sample_n(faithfuld, 1000), aes(eruptions, waiting)) +
geom_point(aes(size = density), alpha = 1/3) +
scale_size_area()
ggplot(sample_n(faithfuld, 10000), aes(eruptions, waiting)) +
geom_point(aes(size = density), alpha = 1/3) +
scale_size_area()
ggplot(sample_n(faithfuld, 500), aes(eruptions, waiting)) +
geom_point(aes(size = density), alpha = 1/3) +
scale_size_area()
wi_counties = map_data("county", "wisconsin") %>%
select(lon=long, group, id=subscription)
install.packages("maps")
require(maps)
wi_counties = map_data("county", "wisconsin") %>%
select(lon=long, group, id=subscription)
wi_counties = map_data("county", "wisconsin") %>%
select(lon=long, group, id=subregion)
ggplot(wi_counties, aes(lon, lat)) +
geom_polygon(aes(group=group)) +
coor_quickmap()
ggplot(wi_counties, aes(lon, lat)) +
geom_polygon(aes(group=group)) +
coord_quickmap()
head(wi_counties)
wi_counties = map_data("county", "michigan") %>%
select(lon=long, group, id=subregion)
head(wi_counties)
wi_counties = map_data("county", "michigan") %>%
select(lon=long, lat, group, id=subregion)
wi_counties = map_data("county", "wisconsin") %>%
select(lon=long, lat, group, id=subregion)
head(wi_counties)
ggplot(wi_counties, aes(lon, lat)) +
geom_polygon(aes(group=group)) +
coord_quickmap()
ggplot(wi_counties, aes(lon, lat)) +
geom_polygon(aes(group=group), fill=NA) +
coord_quickmap()
ggplot(wi_counties, aes(lon, lat)) +
geom_polygon(aes(group=group), fill=NA, color="grey") +
coord_quickmap()
install.packages("USAboundaries")
require(USAboundaries)
c18 = us_boundaries("1820-01-01")
install.packages("USAboundaries")
install.packages("USAboundaries")
knitr::opts_chunk$set(echo = TRUE)
require(maps)
require(USAboundaries)
c18 = us_boundaries("1820-01-01")
